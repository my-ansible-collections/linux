---
# tasks file for build
- name: Import role "support_os"
  ansible.builtin.import_role:
    name: my_ansible_collections.linux.support_os

- name: Install package for DPKG
  when: ansible_distribution in ['Ubuntu']
  ansible.builtin.apt:
    name: >-
      {%- set tmplist = [] -%}
      {%- for i in range(service_list|length) -%}
      {%-   set _ = tmplist.append(service_list[i].package) -%}
      {%- endfor -%}
      {{ tmplist }}
    state: present

- name: Install package for RPM (dnf)
  when: ansible_distribution in ['Amazon', 'AlmaLinux', 'RedHat']
  ansible.builtin.dnf:
    name: >-
      {%- set tmplist = [] -%}
      {%- for i in range(service_list|length) -%}
      {%-   set _ = tmplist.append(service_list[i].package) -%}
      {%- endfor -%}
      {{ tmplist }}
    state: present

- name: Install package for RPM (yum)
  when: ansible_distribution in ['CentOS']
  ansible.builtin.yum:
    name: >-
      {%- set tmplist = [] -%}
      {%- for i in range(service_list|length) -%}
      {%-   set _ = tmplist.append(service_list[i].package) -%}
      {%- endfor -%}
      {{ tmplist }}
    state: present

- name: Set systemd
  when: item.name is defined and item.state is defined and item.enabled is defined
  ansible.builtin.systemd_service:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
    enabled: "{{ item.enabled }}"
  loop: "{{ service_list }}"

- name: Set fact copy conf list
  ansible.builtin.set_fact:
    service_copy_conf_list: >-
      {%- set tmplist = [] -%}
      {%- for i in range(service_list|length) -%}
      {%-   if service_list[i].copy_conf is defined -%}
      {%-     for j in range(service_list[i].copy_conf|length) -%}
      {%-       set _ = tmplist.append(service_list[i].copy_conf[j]|combine({'handler_name':'Handler of role "service" ' + i|string})) -%}
      {%-     endfor -%}
      {%-   endif -%}
      {%- endfor -%}
      {{ tmplist }}

- name: Copy conf file
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    backup: "{{ item.backup | default(omit) }}"
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode | default(omit) }}"
  loop: "{{ service_copy_conf_list }}"
  notify: "{{ item.handler_name }}"

- name: Set fact template conf list
  ansible.builtin.set_fact:
    service_template_conf_list: >-
      {%- set tmplist = [] -%}
      {%- for i in range(service_list|length) -%}
      {%-   if service_list[i].template_conf is defined -%}
      {%-     for j in range(service_list[i].template_conf|length) -%}
      {%-       set _ = tmplist.append(service_list[i].template_conf[j]|combine({'handler_name':'Handler of role "service" ' + i|string})) -%}
      {%-     endfor -%}
      {%-   endif -%}
      {%- endfor -%}
      {{ tmplist }}

- name: Template conf file out to a target host
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    backup: "{{ item.backup | default(omit) }}"
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode | default(omit) }}"
  loop: "{{ service_template_conf_list }}"
  notify: "{{ item.handler_name }}"

- name: Set fact Linefile conf list
  ansible.builtin.set_fact:
    service_linefile_conf_list: >-
      {%- set tmplist = [] -%}
      {%- for i in range(service_list|length) -%}
      {%-   if service_list[i].lineinfile_conf is defined -%}
      {%-     for j in range(service_list[i].lineinfile_conf|length) -%}
      {%-       set _ = tmplist.append(service_list[i].lineinfile_conf[j]|combine({'handler_name':'Handler of role "service" ' + i|string})) -%}
      {%-     endfor -%}
      {%-   endif -%}
      {%- endfor -%}
      {{ tmplist }}

- name: Linefile conf file
  ansible.builtin.lineinfile:
    path: "{{ item.path }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    insertafter: "{{ item.insertafter | default(omit) }}"
    insertbefore: "{{ item.insertbefore | default(omit) }}"
    backup: "{{ item.backup | default(omit) }}"
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode | default(omit) }}"
  loop: "{{ service_linefile_conf_list }}"
  notify: "{{ item.handler_name }}"
