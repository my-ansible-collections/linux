---
# tasks file for build
- name: Import role "support_os"
  ansible.builtin.import_role:
    name: my_ansible_collections.linux.support_os

- name: Install package for DPKG
  when: ansible_distribution in ['Ubuntu']
  ansible.builtin.apt:
    name: "{{ build_package.name | union(['ca-certificates', 'tar', 'gzip', 'perl', 'gcc', 'make']) }}"
    state: present

- name: Install package for RPM (dnf)
  when: ansible_distribution in ['Amazon', 'AlmaLinux', 'RedHat']
  ansible.builtin.dnf:
    name: "{{ build_package.name | union(['ca-certificates', 'tar', 'gzip', 'perl', 'gcc', 'make']) }}"
    state: present

- name: Install package for RPM (yum)
  when: ansible_distribution in ['CentOS']
  ansible.builtin.yum:
    name: "{{ build_package.name | union(['ca-certificates', 'tar', 'gzip', 'perl', 'perl-IPC-Cmd', 'gcc', 'make']) }}"
    state: present

- name: Set source path
  ansible.builtin.set_fact:
    build_source_path: "{{ build_unarchive.dest }}/{{ build_unarchive.src | basename | regex_search('^(.+)(\\.tar|\\.tar\\.gz|\\.tar\\.bz2|\\.tar\\.xz)$', '\\1') | first }}"

- name: Remove source directory
  ansible.builtin.file:
    path: "{{ build_source_path }}"
    state: absent
  changed_when: false

- name: Unarchive source
  ansible.builtin.unarchive:
    src: "{{ build_unarchive.src }}"
    dest: "{{ build_unarchive.dest }}"
    remote_src: "{{ build_unarchive.remote_src }}"
  changed_when: false

- name: "Configure"
  ansible.builtin.command:
    cmd: "./{{ build_configure.name }}{% if build_configure.options is defined %} {{ build_configure.options | join(' ') }}{% endif %}"
    chdir: "{{ build_source_path }}"
  changed_when: false

- name: "Make"
  community.general.make:
    chdir: "{{ build_source_path }}"
    target: "{{ item }}"
  changed_when: false
  loop: "{{ build_make.targets }}"
