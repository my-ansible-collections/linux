---
- name: Verify
  hosts: molecule
  gather_facts: false
  tasks:
    - name: Filter and return only selected facts
      ansible.builtin.setup:
        filter:
          - ansible_distribution

    - name: Execute "systemctl httpd status"
      ansible.builtin.command: systemctl status "{% if ansible_distribution == 'Ubuntu' %}apache2{% else %}httpd{% endif %}"
      register: systemctl_return
      changed_when: false

    - name: Check systemctl httpd status result
      ansible.builtin.assert:
        that:
          - "'{% if ansible_distribution == 'Ubuntu' %}apache2{% else %}httpd{% endif %}.service; enabled;' in systemctl_return.stdout_lines[1]"
          - "'Active: active (running)' in systemctl_return.stdout_lines[2]"
        fail_msg: "{{ systemctl_return.stdout }}"

    - name: Execute "curl http://localhost:8080"
      ansible.builtin.command: curl http://localhost:8080
      register: curl_return
      changed_when: false

    - name: Check curl result
      ansible.builtin.assert:
        that:
          - curl_return.rc == 0
        fail_msg: "{{ curl_return | to_json }}"

    - name: Execute "systemctl sshd status"
      ansible.builtin.command: systemctl status sshd
      register: systemctl_sshd_return
      changed_when: false

    - name: Check systemctl sshd status result
      ansible.builtin.assert:
        that:
          - "'{% if ansible_distribution == 'Ubuntu' %}ssh{% else %}sshd{% endif %}.service; enabled;' in systemctl_sshd_return.stdout_lines[1]"
          - "'Active: active (running)' in systemctl_sshd_return.stdout_lines[2]"
        fail_msg: "{{ systemctl_sshd_return.stdout }}"

    - name: Install package for DPKG
      when: ansible_distribution in ['Ubuntu']
      ansible.builtin.apt:
        name:
          - passwd
        state: present

    - name: Install package for RPM (dnf)
      when: ansible_distribution in ['Amazon', 'AlmaLinux', 'RedHat']
      ansible.builtin.dnf:
        name:
          - openssh-clients
          - passwd
        state: present

    - name: Install package for RPM (yum)
      when: ansible_distribution in ['CentOS']
      ansible.builtin.yum:
        name:
          - openssh-clients
          - passwd
        state: present

    - name: Add test user
      ansible.builtin.user:
        name: hoge

    - name: Execute "passwd -d hoge"
      ansible.builtin.command: passwd -d hoge
      changed_when: false

    - name: Execute "ssh -o "StrictHostKeyChecking no" hoge@localhost whoami"
      ansible.builtin.command: ssh -o "StrictHostKeyChecking no" hoge@localhost whoami
      register: ssh_return
      changed_when: false

    - name: Check ssh result
      ansible.builtin.assert:
        that:
          - ssh_return.rc == 0
          - ssh_return.stdout == "hoge"
        fail_msg: "{{ ssh_return | to_json }}"
